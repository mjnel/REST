{
  "_args": [
    [
      {
        "raw": "autobuild",
        "scope": null,
        "escapedName": "autobuild",
        "name": "autobuild",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\m.nelson\\Documents\\Training\\Local\\webdevbootcamp\\REST\\restfulBlogApp"
    ]
  ],
  "_from": "autobuild@latest",
  "_id": "autobuild@0.0.2",
  "_inCache": true,
  "_location": "/autobuild",
  "_npmUser": {
    "name": "rioki",
    "email": "sean.farrell@rioki.org"
  },
  "_npmVersion": "1.1.65",
  "_phantomChildren": {},
  "_requested": {
    "raw": "autobuild",
    "scope": null,
    "escapedName": "autobuild",
    "name": "autobuild",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/autobuild/-/autobuild-0.0.2.tgz",
  "_shasum": "0c32f13364abf2499cbd9422861f92782c8ac9aa",
  "_shrinkwrap": null,
  "_spec": "autobuild",
  "_where": "C:\\Users\\m.nelson\\Documents\\Training\\Local\\webdevbootcamp\\REST\\restfulBlogApp",
  "author": {
    "name": "Sean Farrell",
    "email": "sean.farrell@rioki.org"
  },
  "bin": {
    "autobuild": "./index.js"
  },
  "bugs": {
    "url": "https://github.com/rioki/autobuild/issues"
  },
  "dependencies": {
    "appjs": "0.0.19",
    "async": "*",
    "fs-extra": "*",
    "optimist": "*"
  },
  "description": "continous integration on the devloper pc",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "0c32f13364abf2499cbd9422861f92782c8ac9aa",
    "tarball": "https://registry.npmjs.org/autobuild/-/autobuild-0.0.2.tgz"
  },
  "homepage": "https://github.com/rioki/autobuild#readme",
  "license": "MIT",
  "maintainers": [
    {
      "name": "rioki",
      "email": "sean.farrell@rioki.org"
    }
  ],
  "name": "autobuild",
  "optionalDependencies": {},
  "preferGlobal": true,
  "readme": "\r\nAutobuild\r\n=========\r\n\r\nAutbuild is continous integration on the developer PC.\r\n\r\nThe main idea behind autobuild is, instead of hitting build, check and deploy\r\nin your IDE or command line, autobuild will to that for you. You change a file\r\neverything gets built, checked and deployed. What build, check and deploy means\r\nis up to you, you specify it in a JSON file. \r\n\r\nExamples\r\n--------\r\n\r\nThe following example shows the autobuild definition for a make file oriented\r\nproject.\r\n\r\nautobuild.json:\r\n\r\n    {\r\n        \"name\": \"My Project\",\r\n        \"sources\": {\r\n            \"directories\": [\r\n                \"./include\",\r\n                \"./src\",\r\n                \"./src/extra\",\r\n            ],\r\n            \"patterns\": [\".cpp\", \".h\"]\r\n        },\r\n        \"build\": {            \r\n            \"cwd\": \"./build\",\r\n            \"command\": \"make\"\r\n        },\r\n        \"check\": {\r\n            \"cwd\": \"./build\",\r\n            \"command\": \"make check\"\r\n        },\r\n        \"deploy\": {\r\n            \"cwd\": \"./build\",\r\n            \"command\": \"make install\"\r\n        }\r\n    }\r\n    \r\nThe following example shows the autobuild definition for a Visual C++ 6 project.\r\n\r\nautobuild.json:\r\n\r\n    {\r\n        \"name\": \"Custom Requirements Assesment Program\",\r\n        \"sources\": {\r\n            \"directories\": [\r\n                \"y:\\\\CRAP_SRC\\\\_inc\",\r\n                \"y:\\\\CRAP_SRC\\\\crap\",\r\n                \"y:\\\\CRAP_SRC\\\\utils\",\r\n            ],\r\n            \"patterns\": [\".cpp\", \".cc\", \".h\", \".hpp\"],\r\n        },\r\n        \"build\": {\r\n            \"cwd\": \"y:\\\\CRAP_SRC\\\\_equ\",\r\n            \"command\": \"msdev.exe crap.dsw /MAKE \\\\\"ALL - RELEASE\\\\\"\"\r\n        },\r\n        \"deploy\": {\r\n            \"source\": \"y:\\\\CRAP_DO\\\\win23\\\\release\",\r\n            \"target\": \"C:\\\\Program Files\\\\Crap\",\r\n            \"files\": [\r\n                \"crap.exe\",\r\n                \"crap.pdb\",\r\n                \"utils.dll\",\r\n                \"utils.pdb\"\r\n            ]\r\n        }\r\n    }\r\n\r\nInstallation\r\n------------\r\n\r\nAutobuild uses node, you need a proper installation of node (including npm).\r\n\r\nThe easiest way to install it is with npm:\r\n\r\n    npm install -g autobuild\r\n\r\nUsage\r\n-----\r\n\r\nYou can either invoke it as a command line utility\r\n\r\n    autobuild autobuild.json\r\n  \r\nor with a user interface\r\n\r\n    autobuild index.js autobuild.json --gui \r\n    \r\nLicense\r\n-------\r\n\r\nCopyright (c) 2012 Sean Farrell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of \r\nthis software and associated documentation files (the \"Software\"), to deal in \r\nthe Software without restriction, including without limitation the rights to \r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \r\nof the Software, and to permit persons to whom the Software is furnished to do \r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all \r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, \r\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN \r\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rioki/autobuild.git"
  },
  "version": "0.0.2"
}
